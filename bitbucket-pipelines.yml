# This is a sample build configuration for Docker.
# Check our guides at https://confluence.atlassian.com/x/O1toN for more examples.
# Only use spaces to indent your .yml configuration.
# -----
# You can specify a custom docker image from Docker Hub as your build environment.
image: openjdk:11

pipelines:
  branches:
    master:
      - step:
          name: build_service_docker_image
          services:
            - docker
          script: # Modify the commands below to build your repository.
            - bash ./gradlew assemble
            # Set $DOCKER_HUB_USERNAME and $DOCKER_HUB_PASSWORD as environment variables in repository settings
            - export IMAGE_NAME=registry.gitlab.com/pivit-engineering/pivit-store/store-api/email-api/master:latest
            - export GITLAB_CI_TOKEN=oUFH_MvzAZodu6DZBxcB

            # build the Docker image (this will use the Dockerfile in the root of the repo)
            - docker build -t $IMAGE_NAME email-api/.
            # authenticate with the Docker Hub registry 
            - docker login -u gitlab-ci-token -p $GITLAB_CI_TOKEN registry.gitlab.com
            # push the new Docker image to the Docker registry
            - docker push $IMAGE_NAME
    dev:
      - step:
          name: build_service_docker_image
          services:
            - docker
          script: # Modify the commands below to build your repository.
            - bash ./gradlew assemble
            # Set $DOCKER_HUB_USERNAME and $DOCKER_HUB_PASSWORD as environment variables in repository settings
            - export IMAGE_NAME=registry.gitlab.com/pivit-engineering/pivit-store/store-api/email-api/dev:latest
            - export GITLAB_CI_TOKEN=oUFH_MvzAZodu6DZBxcB

            # build the Docker image (this will use the Dockerfile in the root of the repo)
            - docker build -t $IMAGE_NAME email-api/.
            # authenticate with the Docker Hub registry 
            - docker login -u gitlab-ci-token -p $GITLAB_CI_TOKEN registry.gitlab.com
            # push the new Docker image to the Docker registry
            - docker push $IMAGE_NAME       
    default: # just to check if every branch push is fine
      - step:
          name: build_db_docker_image
          services:
            - docker
          script: # Modify the commands below to build your repository.
            # build the Docker image (this will use the Dockerfile in the root of the repo)
            - docker build -t image_without_future ./db
      - step:
          name: build_service
          services:
            - docker
          script: # Modify the commands below to build your repository.
            - bash ./gradlew assemble
